//import org.apache.tools.ant.filters.ReplaceTokens // We use this to replace version in plugin.yml

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.10'
    id "com.github.johnrengelman.shadow" version "4.0.0"
}

group 'it.tigierrei'
version '2.0.0-SNAPSHOT'

sourceCompatibility = 1.8

/* This will replace '@VERSION@' in the plugin.yml with the version declared above, just put '@VERSION@' for the version in the plugin.yml */
/*processResources {
    filter ReplaceTokens, tokens: [
            "VERSION": version
    ]
}*/

repositories {
    mavenCentral()
    maven {
        url "http://sndev.it:8081/repository/maven-releases/"
    }
    maven{
        url "http://sndev.it:8081/repository/maven-snapshots/"
    }
    maven { url "http://repo.dmulloy2.net/nexus/repository/public/" }
    maven {
        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    compile "it.tigierrei:ConfigAPI:1.4.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'org.jsoup', name: 'jsoup', version: '1.11.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
    compile group: 'io.netty', name: 'netty-all', version: '4.0.4.Final'
    compile group: 'org.apache.ant', name: 'ant', version: '1.8.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compileOnly "com.mythicmobs:MythicMobs:1.0.0"
    compileOnly "com.citizensapi:CitizensApi:1.0.0"
    compileOnly "com.libsdisguises:LibsDisguises:0.1.0"
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.4.0"
    compileOnly "org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT"
    compileOnly "org.bukkit:bukkit:1.13.2-R0.1-SNAPSHOT"
    compileOnly "com.holograms:Holograms:1.0.0"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava.options.encoding = 'UTF-8' // Encode your source code with UTF-8


// Generate Sources Jar
task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}

// Generate Javadoc Jar
task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar // Build Sources and Javadoc Jar
}